NOTE: 
1. Copy and paste the SQL QUERIES into mysql shell.
2. USE following sql query to call the stored procedure insertPass and releaseTrain
	CALL insertPass(pid,pnr,nname,gender,age,coachno,birthno,birthtype);
	CALL releaseTrain(tno,date,num_ac,num_sl);
3. remember to user proper DATATYPES and CORRECT ORDER while passing arguments to stored procedure.


********************************************************* NOTE: START OF SQL QUERIES *******************************************************************


CREATE TABLE trains (
	trainno INT NOT NULL PRIMARY KEY,
	name VARCHAR(40) NOT NULL,
	from_station VARCHAR(40) NOT NULL,
	to_station VARCHAR(40) NOT NULL
);

CREATE TABLE booking_agent (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
 	username VARCHAR(100) NOT NULL,
    	password VARCHAR(255) NOT NULL,
   	creditcard INT NOT NULL,
    	address VARCHAR(500) NOT NULL, 
    	created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE booking_system (
	trainno INT NOT NULL,
 	date DATE NOT NULL DEFAULT current_date,
 	ac_coaches INT NOT NULL,
 	sl_coaches INT NOT NULL,
 	ac_seats INT DEFAULT 0,
	sl_seats INT DEFAULT 0,
 	PRIMARY KEY (trainno,date),
	FOREIGN KEY(trainno) REFERENCES trains(trainno)
	
) ;

CREATE TABLE tickets(
    	pnr INT NOT NULL PRIMARY KEY,
    	created DATETIME DEFAULT CURRENT_TIMESTAMP,
   	trainno INT NOT NULL,
    	doj DATE NOT NULL,
	coach_type VARCHAR(10) NOT NULL,
	num_pass INT DEFAULT 0,
    	booked_by INT,
    	FOREIGN KEY(booked_by) REFERENCES booking_agent(id),
	FOREIGN KEY(trainno) REFERENCES booking_system(trainno)
);

CREATE TABLE passengers(
    	pid INT NOT NULL,
    	name VARCHAR(100) NOT NULL,
    	gender char(1) NOT NULL,
    	age INT NOT NULL,
    	coachno VARCHAR(3) NOT NULL,
    	berthno INT NOT NULL,
    	berthtype CHAR(2) NOT NULL,
    	pnr INT NOT NULL,
    	PRIMARY KEY(pid,pnr),
    	FOREIGN KEY(pnr) REFERENCES tickets(pnr)
);


DELIMITER $$
CREATE OR REPLACE TRIGGER new_ticket AFTER INSERT on tickets
FOR EACH ROW 
BEGIN
	DECLARE a,s,num_ac,num_sl INT;
	SET a = (SELECT booking_system.ac_seats FROM booking_system WHERE booking_system.trainno = new.trainno AND booking_system.date=new.doj LIMIT 1);
	SET s = (SELECT booking_system.sl_seats FROM booking_system WHERE booking_system.trainno = new.trainno AND booking_system.date=new.doj LIMIT 1);
    	SET num_ac=(SELECT booking_system.ac_coaches FROM booking_system WHERE booking_system.trainno = new.trainno AND booking_system.date=new.doj LIMIT 1);
    	SET num_sl=(SELECT booking_system.sl_coaches FROM booking_system WHERE booking_system.trainno = new.trainno AND booking_system.date=new.doj LIMIT 1);
    	IF new.coach_type= 'ac' AND a+new.num_pass<=num_ac*18 THEN
		UPDATE booking_system SET booking_system.ac_seats=booking_system.ac_seats+new.num_pass WHERE booking_system.trainno=new.trainno and booking_system.date=new.doj;
	ELSEIF new.coach_type= 'sl' AND s+new.num_pass<=num_sl*24 THEN
		UPDATE booking_system SET booking_system.sl_seats=booking_system.sl_seats+new.num_pass WHERE booking_system.trainno=new.trainno and booking_system.date=new.doj;
    	END IF;
END; $$ 
DELIMITER ;



DELIMITER $$
Create Procedure insertPass(IN ppid INT,IN ppnr INT,IN nname VARCHAR(100), IN ggender CHAR(1), IN aage INT, IN coach VARCHAR(3), IN bno INT, IN btype CHAR(2)) BEGIN
	INSERT INTO passengers(pid,name,gender,age,coachno,birthno,birthtype,pnr) VALUES(ppid,nname,ggender,aage,coach,bno,btype,ppnr);
END $$
DELIMITER ;


DELIMITER $$
Create Procedure releaseTrain(IN tno INT,IN doj DATE,IN num_ac INT, IN num_sl INT) BEGIN
	INSERT INTO booking_system(trainno,date,ac_coaches,sl_coaches) VALUES(tno,doj,num_ac,num_sl);
END $$
DELIMITER ;


********************************** NOTE: END OF QUERIES *******************************************************************

